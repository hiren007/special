package com.test.testcase;

import org.testng.Assert;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;
import com.test.base.TestBase;

public class SignUpTestcase extends TestBase {
		
	@Test
	public void withoutcredentialclickonsignupnext() throws InterruptedException
	{
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.blankemailclickonnext(),"Email is required.");
		test.get().log(Status.INFO, "Blank email : " +signuppage.blankemailclickonnext());
		
		Assert.assertEquals(signuppage.blankpasswordclickonnext(),"Password is required.");
		test.get().log(Status.INFO, "Blank password : " +signuppage.blankpasswordclickonnext());
				
		Assert.assertEquals(signuppage.blankconfirmpasswordclickonnext(),"Confirm password is required.");
		test.get().log(Status.INFO, "Blank confirm password : " +signuppage.blankconfirmpasswordclickonnext());
		test.get().log(Status.INFO, "Without credential click on signupnextbutton validation verify");
		scroll.scrollbyPixel();
	}
		
	@Test
	public void mailidblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 1, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 1, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 1, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 1, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 1, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 1, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.emailvalidationblank(), "Email is required.");
		test.get().log(Status.INFO, "Blank email validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void invalidmailid() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 2, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 2, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 2, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 2, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 2, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 2, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.emailvalidationverify(), "Invalid Email Address.");
		test.get().log(Status.INFO, "Invalid email validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void existmailid() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 3, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 3, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 3, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 3, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 3, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 3, 2));
		//signuppage.signupnextbuttonclick();
		Assert.assertEquals(signuppage.emailvalidationverify(), "Email address already exists.");
		test.get().log(Status.INFO, "Email address already exist validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void passwordblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 4, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 4, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 4, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 4, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 4, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 4, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.passwordvalidationverify(), "Password is required.");
		test.get().log(Status.INFO, "Password blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void confirmpasswordblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 5, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 5, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 5, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 5, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 5, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 5, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.confirmpasswordvalidationverify(), "Confirm password is required.");
		test.get().log(Status.INFO, "Confirm password blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void passwordandconfirmpasswordmissmatch() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 6, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 6, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 6, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 6, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 6, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 6, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.passwordvalidationforforamte(), "Password and confirm password should match.");
		test.get().log(Status.INFO, "Password & comfirm password miss match");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void passwordformatecalidation() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 7, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 7, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 7, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 7, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 7, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 7, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.passwordvalidationforforamte(), "Password must be at least 8 characters long..");
		test.get().log(Status.INFO, "Password must be at least 8 characters long.. validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void passwordformatevalidationwithspecialchar() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 8, 0));
		test.get().log(Status.INFO, "Enter email adress : "+excel.getCellData(0, 8, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 8, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 8, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 8, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 8, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		Assert.assertEquals(signuppage.passwordvalidationforforamte(), "Password must have atleast one special character,one digit, one upper and lower character.");
		test.get().log(Status.INFO, "Password must have atleast one special character,one digit, one upper and lower character. validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void withoutcredentialclickonclientifonext() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 14, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 14, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 14, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 14, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 14, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 14, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.selectstate(excel.getCellData(0, 14, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 14, 15));
		signuppage.selectcountry(excel.getCellData(0, 14, 16));
		test.get().log(Status.INFO, "Select country : "+excel.getCellData(0, 14, 16));
		signuppage.clearzipcode();;
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button click");
		Assert.assertEquals(signuppage.blankfirstnameclickonnext(), "First name is required.");
		test.get().log(Status.INFO, signuppage.blankfirstnameclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blanklastnameclickonnext(), "Last name is required.");
		test.get().log(Status.INFO, signuppage.blanklastnameclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankbillingaddressclickonnext(), "Billing address is required.");
		test.get().log(Status.INFO, signuppage.blankbillingaddressclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankcityclickonnext(), "City is required.");
		test.get().log(Status.INFO, signuppage.blankcityclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankstateclickonnext(), "State is required.");
		test.get().log(Status.INFO, signuppage.blankstateclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankcountryclickonnext(), "Country is required.");
		test.get().log(Status.INFO, signuppage.blankcountryclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankzipcodeclickonnext(), "Zip code is required.");
		test.get().log(Status.INFO, signuppage.blankzipcodeclickonnext()+" validation vrify");
		Assert.assertEquals(signuppage.blankphoneclickonnext(), "Phone number is required.");
		test.get().log(Status.INFO, signuppage.blankphoneclickonnext()+" validation vrify");
		test.get().log(Status.INFO, "Without credentials click on cientinfo next button validation vrify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void firstnameblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 15, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 15, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 15, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 15, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 15, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 15, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button click");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 15, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 15, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 15, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 15, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 15, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 15, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 15, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 15, 6));
		signuppage.selectstate(excel.getCellData(0, 15, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 15, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 15, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 15, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 15, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 15, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.firstnamevalidationverify(), "First name is required.");
		test.get().log(Status.INFO, "First name blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void lastnameblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Email address clear successfull");
		signuppage.enteremail(excel.getCellData(0, 16, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 16, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "password clear successfull");
		signuppage.enterpassword(excel.getCellData(0, 16, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 16, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Confirm password clear successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 16, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 16, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 16, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 16, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 16, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 16, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 16, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 16, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 16, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 16, 6));
		signuppage.selectstate(excel.getCellData(0, 16, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 16, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 16, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 16, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 16, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 16, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.lastnamevalidationverify(), "Last name is required.");
		test.get().log(Status.INFO, "Last name blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void billingadressblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 17, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 17, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 17, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 17, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 17, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 17, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear fisrt name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 17, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 17, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 17, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 17, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 17, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 17, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 17, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 17, 6));
		signuppage.selectstate(excel.getCellData(0, 17, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 17, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 17, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 17, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 17, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 17, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client onfo next button");
		Assert.assertEquals("Billing address is required.", signuppage.billingadressvalidationverify());
		test.get().log(Status.INFO, "Billig address blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cityblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email addres successfull");
		signuppage.enteremail(excel.getCellData(0, 18, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 18, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 18, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 18, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 18, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 18, 2));
		signuppage.signupnextbuttonclick();
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 18, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 18, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 18, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 18, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 18, 5));
		test.get().log(Status.INFO, "Enter billing adress : "+excel.getCellData(0, 18, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.selectstate(excel.getCellData(0, 18, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 18, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 18, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 18, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 18, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 18, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.cityvalidationverify(), "City is required.");
		test.get().log(Status.INFO, "City blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void stateblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 19, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 19, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 19, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 19, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 19, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 19, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 19, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 19, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 19, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 19, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 19, 5));
		test.get().log(Status.INFO, "Enter billing adress : "+excel.getCellData(0, 19, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 19, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 19, 6));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 19, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 19, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 19, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 19, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.statevalidationverify(), "State is required.");
		test.get().log(Status.INFO, "State blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void countryblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 20, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 20, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 20, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 20, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 20, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 20, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear fisrt name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 20, 3));
		test.get().log(Status.INFO, "Enter fisrt name : "+excel.getCellData(0, 20, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 20, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 20, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 20, 5));
		test.get().log(Status.INFO, "Enter billing adress : "+excel.getCellData(0, 20, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 20, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 20, 6));
		signuppage.selectstate(excel.getCellData(0, 20, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 20, 15));
		signuppage.selectcountry(excel.getCellData(0, 20, 16));
		test.get().log(Status.INFO, "Select country : "+excel.getCellData(0, 20, 16));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zipcode successfull");
		signuppage.enterzipcode(excel.getCellData(0, 20, 7));
		test.get().log(Status.INFO, "Enter zipcode : "+excel.getCellData(0, 20, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 20, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 20, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.countryvalidationverify(), "Country is required.");
		test.get().log(Status.INFO, "Country blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void zipcodeblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear emailaddress successfull");
		signuppage.enteremail(excel.getCellData(0, 21, 0));
		test.get().log(Status.INFO, "Enter email adress : "+excel.getCellData(0, 21, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 21, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 21, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 21, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 21, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 21, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 21, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 21, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 21, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 21, 5));
		test.get().log(Status.INFO, "Enter billing adress : "+excel.getCellData(0, 21, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 21, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 21, 6));
		signuppage.selectstate(excel.getCellData(0, 21, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 21, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 21, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 21, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phonenumber successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 21, 8));
		test.get().log(Status.INFO, "Enter phonenumber : "+excel.getCellData(0, 21, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.zipcodevalidationverify(), "Zip code is required.");
		test.get().log(Status.INFO, "Zipcode blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void zipcodeblankformate() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 22, 0));
		test.get().log(Status.INFO, "Enter email adress : "+excel.getCellData(0, 22, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 22, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 22, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 22, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 22, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 22, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 22, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 22, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 22, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 22, 5));
		test.get().log(Status.INFO, "Enter billing adress : "+excel.getCellData(0, 22, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 22, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 22, 6));
		signuppage.selectstate(excel.getCellData(0, 22, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 22, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 22, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 22, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 22, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 22, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.zipcodevalidationverify(), "Zip code must be at least 4 characters long.");
		test.get().log(Status.INFO, "Zip code must be at least 4 characters long. validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void phonenumberblank() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address");
		signuppage.enteremail(excel.getCellData(0, 23, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 23, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 23, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 23, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 23, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 23, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 23, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 23, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 23, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 23, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 23, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 23, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 23, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 23, 6));
		signuppage.selectstate(excel.getCellData(0, 23, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 23, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 23, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 23, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 23, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 23, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Thread.sleep(1000);
		Assert.assertEquals(signuppage.phonenumbervalidationverify(), "Phone number is required.");
		test.get().log(Status.INFO, "Phone number blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void phonenumberformate() throws InterruptedException 
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 24, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 24, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 24, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 24, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 24, 2));
		test.get().log(Status.INFO, "Enter confirmpassword : "+excel.getCellData(0, 24, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 24, 3));
		test.get().log(Status.INFO, "Enter fisrt name : "+excel.getCellData(0, 24, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 24, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 24, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 24, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 24, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 24, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 24, 6));
		signuppage.selectstate(excel.getCellData(0, 24, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 24, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 24, 7));
		test.get().log(Status.INFO, "Enter zi pcode : "+excel.getCellData(0, 24, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 24, 8));
		test.get().log(Status.INFO, "Enter phonenumber : "+excel.getCellData(0, 24, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		Assert.assertEquals(signuppage.phonenumbervalidationverify(), "Invalid phone number.");
		test.get().log(Status.INFO, "Invalid phone number validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void withoutcredentialclickonpaymentdeailnext() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 29, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 29, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 29, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 29, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 29, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 29, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 29, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 29, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 29, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 29, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 29, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 29, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 29, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 29, 6));
		signuppage.selectstate(excel.getCellData(0, 29, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 29, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 29, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 29, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 29, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 29, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.blankcradnumberclickonnext(), "Card number is required.");
		test.get().log(Status.INFO, signuppage.blankcradnumberclickonnext()+ " validation verify");
		Assert.assertEquals(signuppage.blankcradholderclickonnext(), "Card holder name is required.");
		test.get().log(Status.INFO, signuppage.blankcradholderclickonnext()+ " validation verify");
		Assert.assertEquals(signuppage.blankcradexpclickonnext(), "Card exp. detail is required.");
		test.get().log(Status.INFO, signuppage.blankcradexpclickonnext()+ " validation verify");
		Assert.assertEquals(signuppage.blankcvvcodeclickonnext(), "CVV code is required.");
		test.get().log(Status.INFO, signuppage.blankcvvcodeclickonnext()+ " validation verify");
		Assert.assertEquals(signuppage.checkboxvalidationblankclickonnext(), "Please accept term of use to continue.");
		test.get().log(Status.INFO, signuppage.checkboxvalidationblankclickonnext()+ " validation verify");
		test.get().log(Status.INFO, "Without enter credential click on paynow button");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cardnumberblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 30, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 30, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 30, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 30, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 30, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 30, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 30, 3));
		test.get().log(Status.INFO, "Enter fisrt name : "+excel.getCellData(0, 30, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 30, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 30, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 30, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 30, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 30, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 30, 6));
		signuppage.selectstate(excel.getCellData(0, 30, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 30, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 30, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 30, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 30, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 30, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 30, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 30, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 30, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 30, 10));
		signuppage.selectmonth(excel.getCellData(0, 30, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 30, 13));
		signuppage.selectyear(excel.getCellData(0, 30, 14));
		test.get().log(Status.INFO, "Select Year : "+excel.getCellData(0, 30, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code sucessfull");
		signuppage.entercvvcode(excel.getCellData(0, 30, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 30, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox cheked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardnumbervalidationverify(), "Card number is required.");
		test.get().log(Status.INFO, "Cardnumber balank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void invalidcardnumber() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 31, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 31, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 31, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 31, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 31, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 31, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 31, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 31, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 31, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 31, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 31, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 31, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 31, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 31, 6));
		signuppage.selectstate(excel.getCellData(0, 31, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 31, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 31, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 31, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 31, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 31, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 31, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 31, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 31, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 31, 10));
		signuppage.selectmonth(excel.getCellData(0, 31, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 31, 13));
		signuppage.selectyear(excel.getCellData(0, 31, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 31, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 31, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 31, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardnumbervalidationverify(), "Card number must be at least 12 characters long.");
		test.get().log(Status.INFO, "Card number must be at least 12 characters long. validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cardholdernameblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 32, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 32, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 32, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 32, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 32, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 32, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 32, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 32, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 32, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 32, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 32, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 32, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city");
		signuppage.entercity(excel.getCellData(0, 32, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 32, 6));
		signuppage.selectstate(excel.getCellData(0, 32, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 32, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 32, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 32, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 32, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 32, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 32, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 32, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 32, 10));
		test.get().log(Status.INFO, "Enter card hoder name : "+excel.getCellData(0, 32, 10));
		signuppage.selectmonth(excel.getCellData(0, 32, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 32, 13));
		signuppage.selectyear(excel.getCellData(0, 32, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 32, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 32, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 32, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox cheked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardholdernamevalidationverify(), "Card holder name is required.");
		test.get().log(Status.INFO, "Card holder name blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cardmonthblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 33, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 33, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 33, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 33, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 33, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 33, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 33, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 33, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 33, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 33, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 33, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 33, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 33, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 33, 6));
		signuppage.selectstate(excel.getCellData(0, 33, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 33, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 33, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 33, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 33, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 33, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 33, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 33, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 33, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 33, 10));
		signuppage.selectyear(excel.getCellData(0, 33, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 33, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 33, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 33, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardexpiryvalidationverify(), "Card exp. detail is required.");
		test.get().log(Status.INFO, "Cardmonth_month_exp blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cardyearblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 34, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 34, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 34, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 34, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 34, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 34, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 34, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 34, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 34, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 34, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 34, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 34, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 34, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 34, 6));
		signuppage.selectstate(excel.getCellData(0, 34, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 34, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 34, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 34, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 34, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 34, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 34, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 34, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 34, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 34, 10));
		signuppage.selectmonth(excel.getCellData(0, 34, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 34, 13));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 34, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 34, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button successfull");
		Assert.assertEquals(signuppage.cardexpiryvalidationverify(), "Card exp. detail is required.");
		test.get().log(Status.INFO, "Card_year_exp blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void cvvcodeblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 35, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 35, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 35, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 35, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 35, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 35, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 35, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 35, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 35, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 35, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 35, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 35, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 35, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 35, 6));
		signuppage.selectstate(excel.getCellData(0, 35, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 35, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 35, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 35, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 35, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 35, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 35, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 35, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 35, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 35, 10));
		signuppage.selectmonth(excel.getCellData(0, 35, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 35, 13));
		signuppage.selectyear(excel.getCellData(0, 35, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 35, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 35, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 35, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cvvcodevalidationverify(), "CVV code is required.");
		test.get().log(Status.INFO, "Cvv code blank validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void invaidcvvcode() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 36, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 36, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 36, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 36, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 36, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 36, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup info next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 36, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 36, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 36, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 36, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 36, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 36, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 36, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 36, 6));
		signuppage.selectstate(excel.getCellData(0, 36, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 36, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 36, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 36, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 36, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 36, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 36, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 36, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 36, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 36, 10));
		signuppage.selectmonth(excel.getCellData(0, 36, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 36, 13));
		signuppage.selectyear(excel.getCellData(0, 36, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 36, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 36, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 36, 11));
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cvvcodevalidationverify(), "CVV must be 3 or 4 characters long.");
		test.get().log(Status.INFO, "CVV must be 3 or 4 characters long. validation verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void couponcodeblank() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 37, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 37, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 37, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 37, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 37, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 37, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button successfull");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 37, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 37, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 37, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 37, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 37, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 37, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 37, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 37, 6));
		signuppage.selectstate(excel.getCellData(0, 37, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 37, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 37, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 37, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 37, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 37, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on client info next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 37, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 37, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 37, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 37, 10));
		signuppage.selectmonth(excel.getCellData(0, 37, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 37, 13));
		signuppage.selectyear(excel.getCellData(0, 37, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 37, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 37, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 37, 11));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on applycoupon button");
		Assert.assertEquals(signuppage.couponcodevalidationverify(), "Coupon Code is required.");
		test.get().log(Status.INFO, "Coupon code blank validation verify");
		scroll.scrollbyPixel();
	}	
	
	@Test
	public void invalidcouponcode() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 38, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 38, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 38, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 38, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 38, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 38, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 38, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 38, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 38, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 38, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 38, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 38, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 38, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 38, 6));
		signuppage.selectstate(excel.getCellData(0, 38, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 38, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 38, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 38, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 38, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 38, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 38, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 38, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Card holder holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 38, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 38, 10));
		signuppage.selectmonth(excel.getCellData(0, 38, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 38, 13));
		signuppage.selectyear(excel.getCellData(0, 38, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 38, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 38, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 38, 11));
		signuppage.clearcoupancode();
		test.get().log(Status.INFO, "Clear coupon code successfull");
		signuppage.entercoupancode(excel.getCellData(0, 38, 12));
		test.get().log(Status.INFO, "Enter coupon code : "+excel.getCellData(0, 38, 12));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on apply button");
		Assert.assertEquals(signuppage.invlalidcouponcodevalidatio(), "Coupon code is not valid.");
		test.get().log(Status.INFO, "Invalid coupon code validation verify");
		scroll.scrollbyPixel();
	}	
	
	@Test
	public void coupancodeapplysucessfull() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 39, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 39, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 39, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 39, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 39, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 39, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 39, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 39, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 39, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 39, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 39, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 39, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 39, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 39, 6));
		signuppage.selectstate(excel.getCellData(0, 39, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 39, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 39, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 39, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 39, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 39, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 39, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 39, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 39, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 39, 10));
		signuppage.selectmonth(excel.getCellData(0, 39, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 39, 13));
		signuppage.selectyear(excel.getCellData(0, 39 ,14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 39, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 39, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 39, 11));
		signuppage.clearcoupancode();
		test.get().log(Status.INFO, "Clear coupon code successfull");
		signuppage.entercoupancode(excel.getCellData(0, 39, 12));
		test.get().log(Status.INFO, "Enter coupon code : "+excel.getCellData(0, 39, 12));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on apply button");
		Assert.assertEquals(signuppage.invlalidcouponcodevalidatio(), "Coupon 200OFF is applied");
		test.get().log(Status.INFO, "Coupon 200OFF is applied verify");
		scroll.scrollbyPixel();
	}
	
	@Test
	public void withoutchecktermsofuse() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 40, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 40, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 40, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 40, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear comfirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 40, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 40, 1));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 40, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 40, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 40, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 40, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 40, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 40, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 40, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 40, 6));
		signuppage.selectstate(excel.getCellData(0, 40, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 40, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zipcode successfull");
		signuppage.enterzipcode(excel.getCellData(0, 40, 7));
		test.get().log(Status.INFO, "Enter zipcode : "+excel.getCellData(0, 40, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phonenumber successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 40, 8));
		test.get().log(Status.INFO, "Enter phonenumber : "+excel.getCellData(0, 40, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 40, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 40, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 40, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 40, 10));
		signuppage.selectmonth(excel.getCellData(0, 40, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 40, 13));
		signuppage.selectyear(excel.getCellData(0, 40, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 40, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 40, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 40, 11));
		signuppage.clearcoupancode();
		test.get().log(Status.INFO, "Clear couponcode successfull");
		signuppage.entercoupancode(excel.getCellData(0, 40, 12));
		test.get().log(Status.INFO, "Enter couponcode : "+excel.getCellData(0, 40, 12));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on apply button");
		Thread.sleep(1000);
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.checkboxvalidationblankclickonnext(), "Please accept term of use to continue.");
		test.get().log(Status.INFO, "Terms of use checkbox validation verify");
		scroll.scrollbyPixel();
	}

	@Test
	public void cardnumberincorrectverify() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 41, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 41, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 41, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 41, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 41, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 41, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Clcik on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 41, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 41, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 41, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 41, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 41, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 41, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 41, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 41, 6));
		signuppage.selectstate(excel.getCellData(0, 41, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 41, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zip code successfull");
		signuppage.enterzipcode(excel.getCellData(0, 41, 7));
		test.get().log(Status.INFO, "Enter zip code : "+excel.getCellData(0, 41, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 41, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 41, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next button");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 41, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 41, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 41, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 41, 10));
		signuppage.selectmonth(excel.getCellData(0, 41, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 41, 13));
		signuppage.selectyear(excel.getCellData(0, 41, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 41, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 41, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 41, 11));
		signuppage.clearcoupancode();
		test.get().log(Status.INFO, "Clear coupon code successfull");
		signuppage.entercoupancode(excel.getCellData(0, 41, 12));
		test.get().log(Status.INFO, "Enter coupon code : "+excel.getCellData(0, 41, 12));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on apply button");
		Thread.sleep(1000);
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardnumberincorrectverify(), "Your card number is incorrect.");
		test.get().log(Status.INFO, "Invalid card number validation verify");
		scroll.scrollbyPixel();
	}	
	
	@Test
	public void expirycard() throws InterruptedException
	{
		driver.navigate().refresh();
		signuppage.popupclose();
		test.get().log(Status.INFO, "Popup closed successfull");
		signuppage.clearEmail();
		test.get().log(Status.INFO, "Clear email address successfull");
		signuppage.enteremail(excel.getCellData(0, 42, 0));
		test.get().log(Status.INFO, "Enter email address : "+excel.getCellData(0, 42, 0));
		signuppage.clearpassWord();
		test.get().log(Status.INFO, "Clear password successfull");
		signuppage.enterpassword(excel.getCellData(0, 42, 1));
		test.get().log(Status.INFO, "Enter password : "+excel.getCellData(0, 42, 1));
		signuppage.clearconfirmpassword();
		test.get().log(Status.INFO, "Clear confirm password successfull");
		signuppage.enterconfirmpassword(excel.getCellData(0, 42, 2));
		test.get().log(Status.INFO, "Enter confirm password : "+excel.getCellData(0, 42, 2));
		signuppage.signupnextbuttonclick();
		test.get().log(Status.INFO, "Click on signup next button");
		signuppage.clearfirstname();
		test.get().log(Status.INFO, "Clear first name successfull");
		signuppage.enterfirstname(excel.getCellData(0, 42, 3));
		test.get().log(Status.INFO, "Enter first name : "+excel.getCellData(0, 42, 3));
		signuppage.clearlastname();
		test.get().log(Status.INFO, "Clear last name successfull");
		signuppage.enterlastname(excel.getCellData(0, 42, 4));
		test.get().log(Status.INFO, "Enter last name : "+excel.getCellData(0, 42, 4));
		signuppage.clearbillingadress();
		test.get().log(Status.INFO, "Clear billing address successfull");
		signuppage.enterbillingadress(excel.getCellData(0, 42, 5));
		test.get().log(Status.INFO, "Enter billing address : "+excel.getCellData(0, 42, 5));
		signuppage.clearcity();
		test.get().log(Status.INFO, "Clear city successfull");
		signuppage.entercity(excel.getCellData(0, 42, 6));
		test.get().log(Status.INFO, "Enter city : "+excel.getCellData(0, 42, 6));
		signuppage.selectstate(excel.getCellData(0, 42, 15));
		test.get().log(Status.INFO, "Select state : "+excel.getCellData(0, 42, 15));
		signuppage.clearzipcode();
		test.get().log(Status.INFO, "Clear zipcode successfull");
		signuppage.enterzipcode(excel.getCellData(0, 42, 7));
		test.get().log(Status.INFO, "Enter zipcode : "+excel.getCellData(0, 42, 7));
		signuppage.clearphonenumber();
		test.get().log(Status.INFO, "Clear phone number successfull");
		signuppage.enterphonenumber(excel.getCellData(0, 42, 8));
		test.get().log(Status.INFO, "Enter phone number : "+excel.getCellData(0, 42, 8));
		signuppage.clientinfobuttonclick();
		test.get().log(Status.INFO, "Click on clientinfo next buttob");
		signuppage.clearcardnumber();
		test.get().log(Status.INFO, "Clear card number successfull");
		signuppage.entercardnumber(excel.getCellData(0, 42, 9));
		test.get().log(Status.INFO, "Enter card number : "+excel.getCellData(0, 42, 9));
		signuppage.clearcardholdername();
		test.get().log(Status.INFO, "Clear card holder name successfull");
		signuppage.entercardholdername(excel.getCellData(0, 42, 10));
		test.get().log(Status.INFO, "Enter card holder name : "+excel.getCellData(0, 42, 10));
		signuppage.selectmonth(excel.getCellData(0, 42, 13));
		test.get().log(Status.INFO, "Select month : "+excel.getCellData(0, 42, 13));
		signuppage.selectyear(excel.getCellData(0, 42, 14));
		test.get().log(Status.INFO, "Select year : "+excel.getCellData(0, 42, 14));
		signuppage.clearcvvcode();
		test.get().log(Status.INFO, "Clear cvv code successfull");
		signuppage.entercvvcode(excel.getCellData(0, 42, 11));
		test.get().log(Status.INFO, "Enter cvv code : "+excel.getCellData(0, 42, 11));
		signuppage.clearcoupancode();
		test.get().log(Status.INFO, "Clear coupon code successfull");
		signuppage.entercoupancode(excel.getCellData(0, 42, 12));
		test.get().log(Status.INFO, "Enter coupon code : "+excel.getCellData(0, 42, 12));
		signuppage.applycouponbuttonclick();
		test.get().log(Status.INFO, "Click on apply button ");
		Thread.sleep(1000);
		signuppage.termsofusecheckbox();
		test.get().log(Status.INFO, "Terms of use checkbox checked");
		signuppage.paynowbuttonclick();
		test.get().log(Status.INFO, "Click on paynow button");
		Assert.assertEquals(signuppage.cardnumberincorrectverify(), "Your card's expiration month is invalid.");
		test.get().log(Status.INFO, "Card expiration of month validation verify");
		scroll.scrollbyPixel();
	}	
}
