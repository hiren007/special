<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="6" total="16" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Main Suite" duration-ms="69803" started-at="2018-09-04T11:02:33Z" finished-at="2018-09-04T11:03:42Z">
    <groups>
    </groups>
    <test name="FirefoxTest" duration-ms="69174" started-at="2018-09-04T11:02:33Z" finished-at="2018-09-04T11:03:42Z">
      <class name="com.test.testcase.ForgotPasswordTestcase">
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="beforeClass" is-config="true" duration-ms="9" started-at="2018-09-04T11:03:02Z" finished-at="2018-09-04T11:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2018-09-04T11:03:02Z" finished-at="2018-09-04T11:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.mailidblank() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mailidblank()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="mailidblank" duration-ms="1377" started-at="2018-09-04T11:03:02Z" finished-at="2018-09-04T11:03:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mailidblank -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="afterMethod" is-config="true" duration-ms="1264" started-at="2018-09-04T11:03:03Z" finished-at="2018-09-04T11:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mailidblank status=SUCCESS method=ForgotPasswordTestcase.mailidblank()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-04T11:03:04Z" finished-at="2018-09-04T11:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.invalidmailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="invalidmailadress" duration-ms="10218" started-at="2018-09-04T11:03:04Z" finished-at="2018-09-04T11:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidmailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="afterMethod" is-config="true" duration-ms="1099" started-at="2018-09-04T11:03:14Z" finished-at="2018-09-04T11:03:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidmailadress status=SUCCESS method=ForgotPasswordTestcase.invalidmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:16Z" finished-at="2018-09-04T11:03:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.doesnotexistmailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="doesnotexistmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="doesnotexistmailadress" duration-ms="11207" started-at="2018-09-04T11:03:16Z" finished-at="2018-09-04T11:03:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email doesn't exists.] but found [Invalid Email Address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email doesn't exists.] but found [Invalid Email Address.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.test.testcase.ForgotPasswordTestcase.doesnotexistmailadress(ForgotPasswordTestcase.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doesnotexistmailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="afterMethod" is-config="true" duration-ms="1893" started-at="2018-09-04T11:03:27Z" finished-at="2018-09-04T11:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doesnotexistmailadress status=FAILURE method=ForgotPasswordTestcase.doesnotexistmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:29Z" finished-at="2018-09-04T11:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.validemailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validemailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="validemailadress" duration-ms="10785" started-at="2018-09-04T11:03:29Z" finished-at="2018-09-04T11:03:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email sent to user.] but found [Invalid Email Address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email sent to user.] but found [Invalid Email Address.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.test.testcase.ForgotPasswordTestcase.validemailadress(ForgotPasswordTestcase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validemailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c]" name="afterMethod" is-config="true" duration-ms="980" started-at="2018-09-04T11:03:39Z" finished-at="2018-09-04T11:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validemailadress status=FAILURE method=ForgotPasswordTestcase.validemailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@6ec8211c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.testcase.ForgotPasswordTestcase -->
      <class name="com.test.testcase.HomeTestcase">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="setUp" is-config="true" duration-ms="27320" started-at="2018-09-04T11:02:33Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Firefox Browser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.HomeTestcase.clickonforgotpassword() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickonforgotpassword()[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="clickonforgotpassword" duration-ms="323" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickonforgotpassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="afterMethod" is-config="true" duration-ms="1275" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickonforgotpassword status=SUCCESS method=HomeTestcase.clickonforgotpassword()[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@25bbf683]" name="tearDown" is-config="true" duration-ms="1377" started-at="2018-09-04T11:03:40Z" finished-at="2018-09-04T11:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6c9f5c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.testcase.HomeTestcase -->
    </test> <!-- FirefoxTest -->
    <test name="Test" duration-ms="69803" started-at="2018-09-04T11:02:33Z" finished-at="2018-09-04T11:03:42Z">
      <class name="com.test.testcase.ForgotPasswordTestcase">
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="beforeClass" is-config="true" duration-ms="2" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.mailidblank() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mailidblank()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="mailidblank" duration-ms="1198" started-at="2018-09-04T11:03:00Z" finished-at="2018-09-04T11:03:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mailidblank -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="afterMethod" is-config="true" duration-ms="1782" started-at="2018-09-04T11:03:02Z" finished-at="2018-09-04T11:03:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mailidblank status=SUCCESS method=ForgotPasswordTestcase.mailidblank()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-04T11:03:03Z" finished-at="2018-09-04T11:03:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.invalidmailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="invalidmailadress" duration-ms="11090" started-at="2018-09-04T11:03:03Z" finished-at="2018-09-04T11:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidmailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="afterMethod" is-config="true" duration-ms="1804" started-at="2018-09-04T11:03:14Z" finished-at="2018-09-04T11:03:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidmailadress status=SUCCESS method=ForgotPasswordTestcase.invalidmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:16Z" finished-at="2018-09-04T11:03:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.doesnotexistmailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="doesnotexistmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="doesnotexistmailadress" duration-ms="10497" started-at="2018-09-04T11:03:16Z" finished-at="2018-09-04T11:03:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email doesn't exists.] but found [Invalid Email Address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email doesn't exists.] but found [Invalid Email Address.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.test.testcase.ForgotPasswordTestcase.doesnotexistmailadress(ForgotPasswordTestcase.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doesnotexistmailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="afterMethod" is-config="true" duration-ms="2300" started-at="2018-09-04T11:03:27Z" finished-at="2018-09-04T11:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=doesnotexistmailadress status=FAILURE method=ForgotPasswordTestcase.doesnotexistmailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:03:29Z" finished-at="2018-09-04T11:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.ForgotPasswordTestcase.validemailadress() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validemailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="validemailadress" duration-ms="10380" started-at="2018-09-04T11:03:29Z" finished-at="2018-09-04T11:03:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email sent to user.] but found [Invalid Email Address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email sent to user.] but found [Invalid Email Address.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.test.testcase.ForgotPasswordTestcase.validemailadress(ForgotPasswordTestcase.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validemailadress -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f]" name="afterMethod" is-config="true" duration-ms="1796" started-at="2018-09-04T11:03:39Z" finished-at="2018-09-04T11:03:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validemailadress status=FAILURE method=ForgotPasswordTestcase.validemailadress()[pri:0, instance:com.test.testcase.ForgotPasswordTestcase@5c18298f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.testcase.ForgotPasswordTestcase -->
      <class name="com.test.testcase.HomeTestcase">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.String)[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="setUp" is-config="true" duration-ms="22024" started-at="2018-09-04T11:02:33Z" finished-at="2018-09-04T11:02:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome Browser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="beforeClass" is-config="true" duration-ms="18" started-at="2018-09-04T11:02:55Z" finished-at="2018-09-04T11:02:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-04T11:02:55Z" finished-at="2018-09-04T11:02:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.HomeTestcase.clickonforgotpassword() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="clickonforgotpassword()[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="clickonforgotpassword" duration-ms="210" started-at="2018-09-04T11:02:55Z" finished-at="2018-09-04T11:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickonforgotpassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="afterMethod" is-config="true" duration-ms="5475" started-at="2018-09-04T11:02:55Z" finished-at="2018-09-04T11:03:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickonforgotpassword status=SUCCESS method=HomeTestcase.clickonforgotpassword()[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestContext)[pri:0, instance:com.test.testcase.HomeTestcase@27d415d9]" name="tearDown" is-config="true" duration-ms="1158" started-at="2018-09-04T11:03:41Z" finished-at="2018-09-04T11:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2bea5ab4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.testcase.HomeTestcase -->
    </test> <!-- Test -->
  </suite> <!-- Main Suite -->
</testng-results>
